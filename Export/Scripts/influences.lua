if not loadStatFile then
	dofile("statdesc.lua")
end
loadStatFile("stat_descriptions.txt")

local function writeMods(name, prefix, suffix, influence)
	local out = io.open("../Data/3_0/Mod" .. name .. ".lua", "w")
	out:write('-- This file is automatically generated, do not edit!\n')
	out:write('-- Item data (c) Grinding Gear Games\n\nreturn {\n')
	for mod in dat"Mods":Rows() do
		if mod.Name == prefix or mod.Name == suffix then
			out:write('\t{ ')
			if mod.GenerationType == 1 then
				out:write('type = "Prefix", ')
			elseif mod.GenerationType == 2 then
				out:write('type = "Suffix", ')
			end
			out:write('affix = "', mod.Name, '", ')
			local stats, orders = describeMod(mod)
			out:write('"', table.concat(stats, '", "'), '", ')
			out:write('statOrder = { ', table.concat(orders, ', '), ' }, ')
			out:write('level = ', mod.Level, ', group = "', mod.Family, '", ')
			out:write('types = { ')
			for i, tag in ipairs(mod.SpawnTags) do
				if mod.SpawnWeights[i] > 0 then
					out:write('"', tag.Id:gsub(influence, ""), '", ')
				end
			end
			out:write('}, ')
			out:write('},\n')
		end
	end
	out:write('}')
	out:close()
end

writeMods("Crusader", "Crusader's", "of the Crusade", "_crusader")
writeMods("Warlord", "Warlord's", "of the Conquest", "_adjudicator")
writeMods("Hunter", "Hunter's", "of the Hunt", "_basilisk")
writeMods("Redeemer", "Redeemer's", "of Redemption", "_eyrie")

print("Influence mods exported.")